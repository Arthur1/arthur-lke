mode: daemonset
image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s

resources:
  limits:
    cpu: 100m
    memory: 200M

presets:
  hostMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: true
  kubeletMetrics:
    enabled: true

extraEnvs:
  - name: MACKEREL_APIKEY
    valueFrom:
      secretKeyRef:
        name: mackerel-arthur-1
        key: apikey
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: K8S_NODE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP

config:
  receivers:
    hostmetrics:
      collection_interval: 1m
    kubeletstats:
      collection_interval: 1m
    jaeger: null
    prometheus: null
    zipkin: null

  processors:
    batch/metrics:
      send_batch_size: 5000
      send_batch_max_size: 5000
    resourcedetection:
      detectors: [env, k8snode]
    resource:
      attributes:
        - key: service.name
          value: worker-node
          action: upsert
        - key: service.namespace
          value: arthur-lke
          action: upsert

  exporters:
    otlp/mackerel:
      endpoint: otlp.mackerelio.com:4317
      compression: gzip
      headers:
        Mackerel-Api-Key: ${env:MACKEREL_APIKEY}

  service:
    pipelines:
      metrics:
        receivers: [hostmetrics]
        processors: [batch/metrics, resourcedetection, resource, k8sattributes]
        exporters: [otlp/mackerel]
      traces: null
      logs: null

ports:
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false
